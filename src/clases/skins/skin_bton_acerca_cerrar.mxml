<?xml version="1.0" encoding="utf-8"?>

<!--

    ADOBE SYSTEMS INCORPORATED
    Copyright 2008 Adobe Systems Incorporated
    All Rights Reserved.

    NOTICE: Adobe permits you to use, modify, and distribute this file
    in accordance with the terms of the license agreement accompanying it.

-->

<!--- The default skin class for the Spark Button component.  

       @see spark.components.Button
        
      @langversion 3.0
      @playerversion Flash 10
      @playerversion AIR 1.5
      @productversion Flex 4
-->
<s:SparkButtonSkin xmlns:fx="http://ns.adobe.com/mxml/2009"
				   xmlns:s="library://ns.adobe.com/flex/spark"
				   xmlns:fb="http://ns.adobe.com/flashbuilder/2009"
				   minWidth="40" minHeight="39"
				   width.disabled="40" height.disabled="39" alpha.disabled="0.5"
				   chromeColor.disabled="#FFFFFF" contentBackgroundAlpha.disabled="0.0"
				   width.down="40" height.down="39" chromeColor.down="#FFFFFF"
				   contentBackgroundAlpha.down="0.0"
				   width.over="40" height.over="39" chromeColor.over="#FFFFFE"
				   contentBackgroundAlpha.over="0.0" focusColor.over="#FCFBF8"
				   width.up="40" height.up="39" chromeColor.up="#FFFFFF"
				   contentBackgroundAlpha.up="0.0" focusColor.up="#FFFFFF">
     
    <fx:Metadata>
        <![CDATA[ 
        /** 
         * @copy spark.skins.spark.ApplicationSkin#hostComponent
         */
        [HostComponent("spark.components.Button")]
        ]]>
    </fx:Metadata>
    
    <fx:Script fb:purpose="styling">
        <![CDATA[         
            import spark.components.Group;
            /* Define the skin elements that should not be colorized. 
            For button, the graphics are colorized but the label is not. */
            static private const exclusions:Array = ["labelDisplay"];
            
            /** 
             * @private
             */     
            override public function get colorizeExclusions():Array {return exclusions;}
            
            /**
             * @private
             */
            override protected function initializationComplete():void
            {
                useChromeColor = true;
                super.initializationComplete();
            }  
            
            /**
             *  @private
             */
            override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number) : void
            {
                var cr:Number = getStyle("cornerRadius");
                
                if (cornerRadius != cr)
                {
                    cornerRadius = cr;
                    //shadow.radiusX = cornerRadius;
                    //fill.radiusX = cornerRadius;
                    lowlight.radiusX = cornerRadius;
                    //highlight.radiusX = cornerRadius;
                    border.radiusX = cornerRadius;
                }
                
                if (highlightStroke) highlightStroke.radiusX = cornerRadius;
              //  if (hldownstroke1) hldownstroke1.radiusX = cornerRadius;
                //if (hldownstroke2) hldownstroke2.radiusX = cornerRadius;
                
                super.updateDisplayList(unscaledWidth, unscaledHeight);
            }
            
            private var cornerRadius:Number = 2;
                                 
        ]]>        
    </fx:Script>
        
    <!-- states -->
    <s:states>
        <s:State name="up" />
        <s:State name="over" />
        <s:State name="down" />
        <s:State name="disabled" />
    </s:states>
    
	
	
	
    <!-- layer 1: shadow -->
    <!--- @private -->
    <!-- layer 2: fill -->
    <!--- @private -->

    <!-- layer 3: fill lowlight -->
    <!--- @private -->
    <s:Rect id="lowlight" includeIn="disabled" left="1" right="1" top="1" bottom="1"
			radiusX="2">
        <s:fill>
            <s:LinearGradient rotation="270">
                <s:GradientEntry color="0x000000" ratio="0.0" alpha="0.0627" />
                <s:GradientEntry color="0x000000" ratio="0.48" alpha="0.0099" />
                <s:GradientEntry color="0x000000" ratio="0.48001" alpha="0" />
            </s:LinearGradient>
        </s:fill>
    </s:Rect>
    
    <!-- layer 4: fill highlight -->
    <!--- @private -->
    
    <!-- layer 5: highlight stroke (all states except down) -->
    <!--- @private -->
    <s:Rect id="highlightStroke" excludeFrom="disabled,down,up" left="1" right="1" top="1" bottom="1"
			width="0" height="0" radiusX="20">
       <!-- <s:stroke>
            <s:LinearGradientStroke rotation="90" weight="0">
                <s:GradientEntry alpha="0.22" color="0xFFFFFF"/>
                <s:GradientEntry alpha="0.22" color="0xD8D8D8"/>
            </s:LinearGradientStroke>
        </s:stroke>
		-->
    </s:Rect>
    
    <!-- layer 6: highlight stroke (down state only) -->
    <!--- @private -->
    <!--- @private -->

    <!-- layer 7: border - put on top of the fill so it doesn't disappear when scale is less than 1 -->
    <!--- @private -->
    <s:Rect id="border" includeIn="disabled,over" left="0" right="0" top="0" bottom="0"
			width="69" height="20" radiusX="2">
		<!--
        <s:stroke>
            <s:LinearGradientStroke rotation="90" weight="0">
                <s:GradientEntry alpha="0.5625" color="0x000000"/>
                <s:GradientEntry alpha="0.75" color="0x000000"/>
            </s:LinearGradientStroke>
        </s:stroke>
		-->
    </s:Rect>
    
    <!-- layer 8: text -->
    <!--- @copy spark.components.supportClasses.ButtonBase#labelDisplay  -->
	
	
	<s:Image includeIn="up" left="0" right="0" top="0" bottom="0" smooth="true"
			 smoothingQuality="high" source="assets/image/acerca/cerrar_1.png"/>
	
	
	<s:Image includeIn="over" left="0" right="0" top="0" bottom="0" smooth="true"
			 smoothingQuality="high" source="assets/image/acerca/cerrar_2.png"/>
	
	<s:Image includeIn="down" left="0" right="0" top="0" bottom="0" smooth="true"
			 smoothingQuality="high" source="assets/image/acerca/cerrar_2.png"/>
	
	
	<s:Image includeIn="disabled" left="0" right="0" top="0" bottom="0" smooth="true"
			 smoothingQuality="high" source="assets/image/acerca/cerrar_2.png"/>
	
	
    
</s:SparkButtonSkin>
